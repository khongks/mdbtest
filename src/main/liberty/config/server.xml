<server description="new server">

    <!-- Enable features -->
    <featureManager>
        <feature>javaee-7.0</feature>
        <feature>mdb-3.2</feature>
        <feature>wmqJmsClient-2.0</feature>
        <feature>jndi-1.0</feature>
        <feature>localConnector-1.0</feature>
    </featureManager>

    <variable name="wmqJmsClient.rar.location" value="${wlp.install.dir}ibmmq/wmq.jmsra.rar"/>
    
    <!-- the startup retry and reconnect retry properties are 
     recommended to ensure robustness of the system.-->
    <wmqJmsClient reconnectionRetryCount="100000" reconnectionRetryInterval="5000" startupRetryCount="100000" startupRetryInterval="1000ms">
	</wmqJmsClient>
	
	<authData id="mqauth" password="{xor}Lz4sLChvLTs=" user="app"/>

	<!-- 
    <jmsConnectionFactory connectionManagerRef="ConMgr6" jndiName="jms/wmqCF">
        <properties.wmqJms 
        channel="DEV.APP.SVRCONN" 
        hostName="localhost" 
        port="1414" 
        queueManager="QM1" 
        transportType="CLIENT"
		userName="app"
        password="{xor}Lz4sLChvLTs=" />
    </jmsConnectionFactory>
    -->
    <jmsConnectionFactory connectionManagerRef="ConMgr6" jndiName="jms/wmqCF">
        <properties.wmqJms ccdtURL="file://${wlp.install.dir}ibmmq/ccdt.json" password="{xor}Lz4sLChvLTs=" queueManager="*QMGRP" userName="app"/>
    </jmsConnectionFactory>
    <connectionManager id="ConMgr6" maxPoolSize="2"/>

    <jmsActivationSpec authDataRef="mqauth" id="mdbtest/SampleListenerMDBQM1">
        <properties.wmqJms 
        ccdtURL="file://${wlp.install.dir}ibmmq/ccdtQM1.json"         
        queueManager="QM1" 
        destinationRef="jms/queue1"/>
    </jmsActivationSpec>
    
    <jmsActivationSpec authDataRef="mqauth" id="mdbtest/SampleListenerMDBQM2">
        <properties.wmqJms 
        ccdtURL="file://${wlp.install.dir}ibmmq/ccdtQM2.json" 
        queueManager="QM2"
        destinationRef="jms/queue1"/>
    </jmsActivationSpec>
    
	<!--
    <jmsActivationSpec id="mdbtest/SampleListenerMDB">
        <properties.wmqJms 
        channel="DEV.APP.SVRCONN" 
        destinationRef="jms/queue1" 
        hostName="localhost" 
        port="1414" 
        queueManager="QM1" 
        transportType="CLIENT"
        containerAuthData user="app" password="{xor}Lz4sLChvLTs=" />
    </jmsActivationSpec>
    -->
    
    <!-- 
    <jmsActivationSpec id="mdbtest/SampleListenerMDB">
        <properties.wmqJms 
        ccdtURL="file://${wlp.install.dir}ibmmq/AMQCLCHL.TAB" 
        destinationRef="jms/queue1"
        queueManager="*QMGRP" userName="app" password="{xor}Lz4sLChvLTs=" />
    </jmsActivationSpec>
    -->
    <!-- 
    <jmsActivationSpec id="mdbtest/SampleListenerMDB">
        <properties.wmqJms 
        ccdtURL="file://${wlp.install.dir}ibmmq/ccdt.json" 
        destinationRef="jms/queue1"
        queueManager="*QMGRP" />
        <authData password="{xor}Lz4sLChvLTs=" user="app"/>
    </jmsActivationSpec>
    -->

	<!-- 
    <jmsQueue id="jms/queue1" jndiName="jms/queue1">
        <properties.wmqJms baseQueueManagerName="QM1" baseQueueName="DEV.QUEUE.1"/>
    </jmsQueue>
    -->

    <jmsQueue id="jms/queue1" jndiName="jms/queue1">
        <properties.wmqJms baseQueueName="DEV.QUEUE.1"/>
    </jmsQueue>

    <!-- This template enables security. To get the full use of all the capabilities, a keystore and user registry are required. -->
    
    <!-- For the keystore, default keys are generated and stored in a keystore. To provide the keystore password, generate an 
         encoded password using bin/securityUtility encode and add it below in the password attribute of the keyStore element. 
         Then uncomment the keyStore element. -->
    <!--
    <keyStore password=""/> 
    -->
    
    <!--For a user registry configuration, configure your user registry. For example, configure a basic user registry using the
        basicRegistry element. Specify your own user name below in the name attribute of the user element. For the password, 
        generate an encoded password using bin/securityUtility encode and add it in the password attribute of the user element. 
        Then uncomment the user element. -->

    
    <!-- To access this server from a remote client add a host attribute to the following element, e.g. host="*" -->
    <httpEndpoint host="*" httpPort="9080" httpsPort="10443" id="defaultHttpEndpoint"/>
                  
    <!-- Automatically expand WAR files and EAR files -->
    <applicationManager autoExpand="true"/>


    <keyStore id="defaultKeyStore" password="{xor}Dz4sLChvLTt+"/>

    <basicRegistry id="basic" realm="BasicRealm">
        <user name="admin" password="{xor}Dz4sLChvLTt+"/>
    </basicRegistry>

    <applicationMonitor updateTrigger="mbean"/>
</server>